#!/usr/bin/perl

# Example using Amazon::EC2

use strict;
use warnings;

use Amazon::EC2;
use Amazon::Credentials;

use Data::Dumper;
use JSON;
use Scalar::Util qw/reftype/;
use URI::Escape;

my $ec2 = new Amazon::EC2({credentials => new Amazon::Credentials({order => [qw/role file/]}), debug => 0});

if (0) {
  eval {
    my $result = $ec2->CreateSnapshot(
				      VolumeId    => 'vol-04f5ef6e21b9bc954',
				      Description => 'test+bedrock+build+snapshot'
				     );
    
    my $resourceId = $result->{snapshotId};
    
    print Dumper [ $ec2->CreateTags( $resourceId => { Key => 'Name', Value => 'test-bedrock' })];
  };

  if ( $@ && ref($@) =~ /Amazon::API::Error/) {
    my $err = $@;
    print STDERR sprintf("error in API [%s] invoking Action: [%s]:\n%s\n",
			 $err->get_aws_api,
			 $err->get_api->get_last_action,
			 Dumper [ $err->get_response() ]
			);
  }
  
  exit;
}

#my $filter = [ {Name => 'instance-id', Value => 'i-0b91d8e165cf2f41b'} ];
#my $result = $ec2->DescribeInstances(Filter => $filter);

my $result = $ec2->DescribeInstances();
my $item = $result->{reservationSet}->{item};

my %instance_info;

foreach my $info (@$item) {
  my $tagSet = $info->{instancesSet}->{item}->{tagSet}->{item};
  $tagSet = reftype($tagSet) ne 'ARRAY' ? [ $tagSet ] : $tagSet;
  my $Name;
  
  foreach my $tag ( @$tagSet ) {
    if ( $tag->{key} && $tag->{key} eq 'Name' ) {
      $Name = $tag->{value};
      last;
    }
    elsif ( exists $tag->{Name} ) {
      $Name = $tag->{Name}->{value};
    }
  }
  
  my $instanceId = $info->{instancesSet}->{item}->{instanceId};
  my $volumeId;
  
  my $blockDeviceMapping = $info->{instancesSet}->{item}->{blockDeviceMapping}->{item};
  
  if (reftype($blockDeviceMapping) eq 'HASH' ) {
    $volumeId = $blockDeviceMapping->{ebs}->{volumeId};
  }
  else {
    $volumeId = join(',', map { $_->{ebs}->{volumeId} } @{$blockDeviceMapping});
  }
  
  unless ( $Name ) {
    print STDERR sprintf("instance: [%s] state: [%s] is not tagged\n",
			 $instanceId,
			 $info->{instancesSet}->{item}->{instanceState}->{name});
    $instance_info{$instanceId} = $info;
  }
  else {
    $instance_info{$Name} = $info;
  }
}

print to_json(\%instance_info, { pretty => 1});

